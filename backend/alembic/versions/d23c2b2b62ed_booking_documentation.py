"""Booking + Documentation

Revision ID: d23c2b2b62ed
Revises: e03ab3d7c84d
Create Date: 2025-10-22 10:56:17.191459

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd23c2b2b62ed'
down_revision: Union[str, Sequence[str], None] = 'e03ab3d7c84d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('law_documentation',
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('s3_key', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('uploaded_by_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('create_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['user.id'], name=op.f('law_documentation_uploaded_by_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('law_documentation_pkey')),
    sa.UniqueConstraint('s3_key', name=op.f('law_documentation_s3_key_key'))
    )
    op.create_index(op.f('law_documentation_id_idx'), 'law_documentation', ['id'], unique=False)
    op.create_table('lawyer_schedule_slot',
    sa.Column('lawyer_id', sa.Uuid(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('is_booked', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('create_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['lawyer_id'], ['user.id'], name=op.f('lawyer_schedule_slot_lawyer_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('lawyer_schedule_slot_pkey'))
    )
    op.create_index(op.f('lawyer_schedule_slot_id_idx'), 'lawyer_schedule_slot', ['id'], unique=False)
    op.create_table('booking_request',
    sa.Column('client_id', sa.Uuid(), nullable=False),
    sa.Column('lawyer_id', sa.Uuid(), nullable=False),
    sa.Column('schedule_slot_id', sa.Uuid(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('short_description', sa.String(length=1000), nullable=False),
    sa.Column('desired_start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('desired_end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('attachment_key', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('decision_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('create_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['user.id'], name=op.f('booking_request_client_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lawyer_id'], ['user.id'], name=op.f('booking_request_lawyer_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['schedule_slot_id'], ['lawyer_schedule_slot.id'], name=op.f('booking_request_schedule_slot_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('booking_request_pkey'))
    )
    op.create_index(op.f('booking_request_id_idx'), 'booking_request', ['id'], unique=False)
    op.create_table('case_history',
    sa.Column('booking_request_id', sa.Uuid(), nullable=True),
    sa.Column('lawyer_id', sa.Uuid(), nullable=False),
    sa.Column('client_id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.Column('attachment_keys', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('lawyer_note', sa.String(length=2000), nullable=True),
    sa.Column('client_note', sa.String(length=2000), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ending_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('create_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['booking_request_id'], ['booking_request.id'], name=op.f('case_history_booking_request_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['client_id'], ['user.id'], name=op.f('case_history_client_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lawyer_id'], ['user.id'], name=op.f('case_history_lawyer_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('case_history_pkey'))
    )
    op.create_index(op.f('case_history_id_idx'), 'case_history', ['id'], unique=False)
    op.create_table('lawyer_rating',
    sa.Column('case_history_id', sa.Uuid(), nullable=False),
    sa.Column('lawyer_id', sa.Uuid(), nullable=False),
    sa.Column('client_id', sa.Uuid(), nullable=False),
    sa.Column('stars', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('create_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['case_history_id'], ['case_history.id'], name=op.f('lawyer_rating_case_history_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['client_id'], ['user.id'], name=op.f('lawyer_rating_client_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lawyer_id'], ['user.id'], name=op.f('lawyer_rating_lawyer_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('lawyer_rating_pkey')),
    sa.UniqueConstraint('case_history_id', name=op.f('lawyer_rating_case_history_id_key'))
    )
    op.create_index(op.f('lawyer_rating_id_idx'), 'lawyer_rating', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('lawyer_rating_id_idx'), table_name='lawyer_rating')
    op.drop_table('lawyer_rating')
    op.drop_index(op.f('case_history_id_idx'), table_name='case_history')
    op.drop_table('case_history')
    op.drop_index(op.f('booking_request_id_idx'), table_name='booking_request')
    op.drop_table('booking_request')
    op.drop_index(op.f('lawyer_schedule_slot_id_idx'), table_name='lawyer_schedule_slot')
    op.drop_table('lawyer_schedule_slot')
    op.drop_index(op.f('law_documentation_id_idx'), table_name='law_documentation')
    op.drop_table('law_documentation')
    # ### end Alembic commands ###
